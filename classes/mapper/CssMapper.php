<?php
/**
 * Created by JetBrains PhpStorm.
 * User: sidler
 * Date: 12.08.13
 * Time: 09:33
 * To change this template use File | Settings | File Templates.
 */

class CssMapper implements IDataMapper {

    private $strOutputBuffer = "";

    /**
     * @return mixed
     */
    public function writeHeader() {
        $this->strOutputBuffer .= "\n";
        $strDate = date('r');
        $this->strOutputBuffer .= <<<CSS

/* CSS generated by phpImageSpriteGenerator, https://github.com/sidler/phpImageSpriteGenerator */
/* Generated on {$strDate} */


CSS;

    }

    /**
     * @param ImageData[] $arrImageData
     *
     * @return mixed
     */
    public function writeToFile(array $arrImageData) {
        $strSpriteName = SpriteGenerator::$CONFIG_SPRITE_PREFIX.SpriteGenerator::$CONFIG_CUR_SPRITE_NAME.".png";
        $intBackWidth = SpriteGenerator::$SPRITE_TOTAL_WIDTH;
        $intBackHeight = SpriteGenerator::$SPRITE_TOTAL_HEIGHT;

        foreach($arrImageData as $objOneData) {

            $strClassName = substr($objOneData->getImageName(), 0, -4);

            $this->strOutputBuffer .= <<<CSS

.{$strClassName} {
    background: url('{$strSpriteName}') no-repeat {$objOneData->getIntSpriteX()}px -{$objOneData->getIntSpriteY()}px;
    background-size:  {$intBackHeight}px {$intBackWidth}px;
}
CSS;

            if(SpriteGenerator::$CONFIG_GENERATE_PRINTSTYLES) {
                $strSourceImageName = str_replace(".png", "_print.png", SpriteGenerator::$CONFIG_SPRITE_PREFIX.$objOneData->getImageName());

                $this->strOutputBuffer .= <<<CSS

@media print {
    .{$strClassName}:after {
        content:url('{$strSourceImageName}');
    }
}

CSS;

            }

        }
    }

    /**
     * @return mixed
     */
    public function writeFooter() {
        $this->strOutputBuffer .= "\n\n";
        file_put_contents(SpriteGenerator::$CONFIG_SPRITEGEN_OUTPATH.DIRECTORY_SEPARATOR.SpriteGenerator::$CONFIG_CUR_SPRITE_NAME.".css", $this->strOutputBuffer);
    }

}